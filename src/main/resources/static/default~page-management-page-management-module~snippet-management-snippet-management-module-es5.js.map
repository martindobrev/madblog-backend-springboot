{"version":3,"sources":["webpack:///src/app/api/page.ts","webpack:///src/app/page-management/page-create/page-create.component.ts","webpack:///src/app/page-management/page-create/page-create.component.html","webpack:///src/app/page-management/page-edit/page-edit.component.ts","webpack:///src/app/page-management/page-list/page-list.component.ts","webpack:///src/app/page-management/page-list/page-list.component.html","webpack:///src/app/page-management/page-management-routing.module.ts","webpack:///src/app/page-management/page-management.module.ts","webpack:///src/app/services/page/page-collection-resolve.service.ts"],"names":["Page","PageCollection","PageCreateComponent","menuService","router","activatedRoute","page","error","createPage","subscribe","navigate","relativeTo","console","log","savePage","selector","templateUrl","styleUrls","PageEditComponent","data","editPage","PageListComponent","idToDelete","timer","pageCollection","pages","sortablePagesContainer","nativeElement","addEventListener","event","reorderPages","UIkit","sortable","pageToBeSaved","published","target","checked","name","newOrderedPages","pageDivs","children","i","length","pageEl","id","parseInt","innerText","pageWithNewOrder","getPageById","order","push","collection","find","deletePage","disableTimer","getPages","window","setTimeout","clearTimeout","routes","path","component","resolve","canActivate","PageManagementRoutingModule","forChild","imports","exports","PageManagementModule","declarations","PageCollectionResolveService","route","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAAaA,I;;;;QAYAC,c;;;;;;;;;;;;;;;;;;;ACZb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACGM;;AACE;;AAAsD;;AAAE;;AACxD;;AACE;;AAAsE;AAAA;;AAAA;;AAAA;AAAA;;AAAtE;;AACF;;AACF;;;;;;AAF0E;;AAAA;;;;;;;;AAI1E;;AACI;;AAAyD;;AAAK;;AAC9D;;AACE;;AAA4E;AAAA;;AAAA;;AAAA;AAAA;;AAA5E;;AACF;;AACJ;;;;;;AAFkF;;AAAA;;;;;;;;;;QDH3EC,mB;AAKX,mCAAoBC,WAApB,EACUC,MADV,EAEUC,cAFV,EAE0C;AAAA;;AAFtB,aAAAF,WAAA,GAAAA,WAAA;AACV,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AALV,aAAAC,IAAA,GAAa,IAAI,8CAAJ,EAAb;AAEA,aAAAC,KAAA,GAAgB,IAAhB;AAG6C;;;;mCAElC,CAEV;;;mCAEU;AAAA;;AACT,eAAKJ,WAAL,CAAiBK,UAAjB,CAA4B,KAAKF,IAAjC,EAAuCG,SAAvC,CAAiD,UAAAH,IAAI,EAAI;AACvD,iBAAI,CAACF,MAAL,CAAYM,QAAZ,CAAqB,CAAC,MAAD,CAArB,EAA+B;AAACC,wBAAU,EAAE,KAAI,CAACN;AAAlB,aAA/B;AACD,WAFD,EAEG,UAAAE,KAAK,EAAI;AACVK,mBAAO,CAACC,GAAR,CAAY,yCAAZ;AACA,iBAAI,CAACN,KAAL,GAAaA,KAAb;AACD,WALD;AAMD;;;;;;;uBApBUL,mB,EAAmB,wI,EAAA,uH,EAAA,+H;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,c;AAAA,i2C;AAAA;AAAA;ACVhC;;AACE;;AACE;;AACE;;AAOA;;AAOA;;AACE;;AAAwD;;AAAI;;AAC5D;;AACE;;AAC2B;AAAA;AAAA;;AAD3B;;AAEF;;AACF;;AAEA;;AACE;;AAAwD;;AAAI;;AAC5D;;AACE;;AAC0B;AAAA;AAAA;;AAD1B;;AAEF;;AACF;;AAEA;;AACE;;AAA2D;;AAAO;;AAClE;;AACE;;AAAgC;AAAA;AAAA;;AAAoC;;AAItE;;AACF;;AAEA;;AACE;;AACE;;AAAiE;;AAAM;;AACvE;;AAAyE;AAAA,mBAAS,IAAAY,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAI;;AACpG;;AACF;;AACF;;AACF;;AACF;;;;;;;;;;AAhD6B;;AAAA;;AAOA;;AAAA;;AAU8B;;AAAA,oKAA6C,SAA7C,EAA6C,aAA7C;;AAQA;;AAAA,qKAA6C,SAA7C,EAA6C,aAA7C;;AAQjB;;AAAA;;AAUxB;;AAAA;;;;;;;;;sEDpCLZ,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTa,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ADGM;;AACE;;AAAsD;;AAAE;;AACxD;;AACE;;AAAsE;AAAA;;AAAA;;AAAA;AAAA;;AAAtE;;AACF;;AACF;;;;;;AAF0E;;AAAA;;;;;;;;AAI1E;;AACI;;AAAyD;;AAAK;;AAC9D;;AACE;;AAA4E;AAAA;;AAAA;;AAAA;AAAA;;AAA5E;;AACF;;AACJ;;;;;;AAFkF;;AAAA;;;;;;;;;;QCH3EC,iB;AAIX,iCAAoBb,cAApB,EAA4DF,WAA5D,EAA8FC,MAA9F,EAA8G;AAAA;;AAA1F,aAAAC,cAAA,GAAAA,cAAA;AAAwC,aAAAF,WAAA,GAAAA,WAAA;AAAkC,aAAAC,MAAA,GAAAA,MAAA;AAF9F,aAAAE,IAAA,GAAa,IAAI,8CAAJ,EAAb;AAEiH;;;;mCAEtG;AAAA;;AACT,eAAKD,cAAL,CAAoBc,IAApB,CAAyBV,SAAzB,CAAmC,UAAAU,IAAI,EAAI;AACzCP,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BM,IAAI,CAACb,IAAlC;AACA,kBAAI,CAACA,IAAL,GAAYa,IAAI,CAACb,IAAjB;AACD,WAHD;AAID;;;mCAEU;AAAA;;AACTM,iBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKP,IAAhC;AACA,eAAKH,WAAL,CAAiBiB,QAAjB,CAA0B,KAAKd,IAA/B,EAAqCG,SAArC,CAA+C,UAAAH,IAAI,EAAI;AACrD,kBAAI,CAACF,MAAL,CAAYM,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAAEC,wBAAU,EAAE,MAAI,CAACN;AAAnB,aAAjC;AACD,WAFD;AAGD;;;;;;;uBAlBUa,iB,EAAiB,+H,EAAA,wI,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,c;AAAA,i2C;AAAA;AAAA;ADV9B;;AACE;;AACE;;AACE;;AAOA;;AAOA;;AACE;;AAAwD;;AAAI;;AAC5D;;AACE;;AAC2B;AAAA;AAAA;;AAD3B;;AAEF;;AACF;;AAEA;;AACE;;AAAwD;;AAAI;;AAC5D;;AACE;;AAC0B;AAAA;AAAA;;AAD1B;;AAEF;;AACF;;AAEA;;AACE;;AAA2D;;AAAO;;AAClE;;AACE;;AAAgC;AAAA;AAAA;;AAAoC;;AAItE;;AACF;;AAEA;;AACE;;AACE;;AAAiE;;AAAM;;AACvE;;AAAyE;AAAA,mBAAS,IAAAJ,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAI;;AACpG;;AACF;;AACF;;AACF;;AACF;;;;;;;;;;AAhD6B;;AAAA;;AAOA;;AAAA;;AAU8B;;AAAA,oKAA6C,SAA7C,EAA6C,aAA7C;;AAQA;;AAAA,qKAA6C,SAA7C,EAA6C,aAA7C;;AAQjB;;AAAA;;AAUxB;;AAAA;;;;;;;;;sECpCLI,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTH,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,6CAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACAA;;AAAsD;;AAAkB;;;;;;;;AAoB5D;;AACI;;AAA4F;;AAAI;;AAChG;;AAAsI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAM;;AAChL;;;;;;;;AAFgE;;AAAA;;AACe;;AAAA;;;;;;;;AAG/E;;AACI;;AAAO;;AAAK;;AACZ;;AAA4E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAG;;AAC9G;;;;;;;;AAfR;;AACI;;AAAgC;;AAA6B;;AAAc;;AAC3E;;AAAK;;AAAW;;AAChB;;AAAK;;AAAa;;AAClB;;AAAK;;AAAa;;AAClB;;AAAK;;AAA2C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA3C;;AAAqH;;AAC1H;;AACI;;AAKA;;AAIJ;;AACJ;;;;;;;;AAhBiE;;AAAA;;AACxD;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACyF;;AAAA;;AAErF;;AAAA;;AAKA;;AAAA;;;;;;AAbjB;;AACI;;AAkBJ;;;;;;AAlBqD;;AAAA;;;;QDExCI,iB;AASX,iCAAoBhB,cAApB,EAA4DF,WAA5D,EAAsF;AAAA;;AAAlE,aAAAE,cAAA,GAAAA,cAAA;AAAwC,aAAAF,WAAA,GAAAA,WAAA;AAL5D,aAAAmB,UAAA,GAAqB,IAArB;AACA,aAAAC,KAAA,GAAgB,IAAhB;AAMC;;;;mCAEU;AAAA;;AACT,eAAKlB,cAAL,CAAoBc,IAApB,CAAyBV,SAAzB,CAAmC,UAAAU,IAAI,EAAI;AACzC,gBAAIA,IAAI,CAACK,cAAT,EAAyB;AACvB,oBAAI,CAACC,KAAL,GAAaN,IAAI,CAACK,cAAL,CAAoBC,KAAjC;AACD,aAFD,MAEO;AACL,oBAAI,CAACA,KAAL,GAAa,EAAb;AACD;AACF,WAND;AAOD;;;0CAEiB;AAAA;;AAChB,eAAKC,sBAAL,CAA4BC,aAA5B,CAA0CC,gBAA1C,CAA2D,MAA3D,EAAmE,UAACC,KAAD,EAAW;AAC5E,kBAAI,CAACC,YAAL;AACD,WAFD;AAIAC,eAAK,CAACC,QAAN,CAAe,KAAKN,sBAAL,CAA4BC,aAA3C,EAA0D;AACxD,sBAAc,qBAD0C;AAExD,wBAAc;AAF0C,WAA1D;AAID;;;6CAEoBrB,I,EAAYuB,K,EAAY;AAC3C,cAAMI,aAAa,GAAG3B,IAAtB;AACA2B,uBAAa,CAACC,SAAd,GAA0BL,KAAK,CAACM,MAAN,CAAaC,OAAvC;AAEA,eAAKjC,WAAL,CAAiBiB,QAAjB,CAA0Ba,aAA1B,EAAyCxB,SAAzC,CAAmD,UAAAH,IAAI,EAAI;AACzDM,mBAAO,CAACC,GAAR,gBAAoBP,IAAI,CAAC+B,IAAzB,yBAA4C/B,IAAI,CAAC4B,SAAjD;AACD,WAFD;AAGD;;;uCAGsB;AAAA;;AACrB,cAAMV,cAAc,GAAG,IAAI,wDAAJ,EAAvB;AACA,cAAMc,eAAe,GAAG,EAAxB;AACA,cAAMC,QAAQ,GAAG,KAAKb,sBAAL,CAA4BC,aAA5B,CAA0Ca,QAA3D;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,gBAAME,MAAM,GAAGJ,QAAQ,CAACE,CAAD,CAAvB;AACA,gBAAMG,EAAE,GAAGC,QAAQ,CAACF,MAAM,CAACH,QAAP,CAAgB,CAAhB,EAAmBM,SAApB,EAA+B,EAA/B,CAAnB;AACAlC,mBAAO,CAACC,GAAR,kBAAsB+B,EAAtB;AACA,gBAAMG,gBAAgB,GAAG,KAAKC,WAAL,CAAiBJ,EAAjB,CAAzB;AACAG,4BAAgB,CAACE,KAAjB,GAAyBR,CAAC,GAAG,CAA7B;AACAH,2BAAe,CAACY,IAAhB,CAAqBH,gBAArB;AACD;;AAED,eAAKtB,KAAL,GAAaa,eAAb;AACAd,wBAAc,CAACC,KAAf,GAAuBa,eAAvB;AACA,eAAKnC,WAAL,CAAiB2B,YAAjB,CAA8BN,cAA9B,EAA8Cf,SAA9C,CAAwD,UAAA0C,UAAU,EAAI;AACpE,kBAAI,CAAC1B,KAAL,GAAa0B,UAAU,CAAC1B,KAAxB;AACD,WAFD;AAGD;;;oCAEmBmB,E,EAAY;AAC9B,iBAAO,KAAKnB,KAAL,CAAW2B,IAAX,CAAgB,UAAA9C,IAAI,EAAI;AAC7B,mBAAOA,IAAI,CAACsC,EAAL,KAAYA,EAAnB;AACD,WAFM,CAAP;AAGD;;;mCAEUtC,I,EAAY;AAAA;;AACrB,eAAKH,WAAL,CAAiBkD,UAAjB,CAA4B/C,IAA5B,EAAkCG,SAAlC,CAA4C,YAAM;AAChD,gBAAI,MAAI,CAACc,KAAT,EAAgB;AACd,oBAAI,CAAC+B,YAAL;AACD;;AAED,kBAAI,CAACnD,WAAL,CAAiBoD,QAAjB,GAA4B9C,SAA5B,CAAsC,UAAAe,cAAc,EAAI;AACtD,oBAAI,CAACC,KAAL,GAAaD,cAAc,CAACC,KAA5B;AACD,aAFD;AAGD,WARD;AASD;;;wCAEenB,I,EAAY;AAAA;;AAC1B,eAAKgB,UAAL,GAAkBhB,IAAI,CAACsC,EAAvB;AACA,eAAKrB,KAAL,GAAaiC,MAAM,CAACC,UAAP,CAAkB,YAAM;AACnC,kBAAI,CAACH,YAAL;AACD,WAFY,EAEV,IAFU,CAAb;AAGD;;;uCAEsB;AACrB,eAAKhC,UAAL,GAAkB,IAAlB;AACAkC,gBAAM,CAACE,YAAP,CAAoB,KAAKnC,KAAzB;AACA,eAAKA,KAAL,GAAa,IAAb;AACD;;;;;;;uBA7FUF,iB,EAAiB,+H,EAAA,wI;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;;;;;;;;;;;;;;;ACf9B;;AAGA;;AACI;;AAAK;;AAAK;;AACV;;AAAK;;AAAE;;AACP;;AAAK;;AAAI;;AACT;;AAAK;;AAAI;;AACT;;AAAK;;AAAS;;AACd;;AAA0B;;AAAO;;AACrC;;AAEA;;;;AAZG;;AAYE;;AAAA;;;;;;;;;sEDGQA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTN,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;gBAO3B,uD;iBAAU,wB,EAA0B;AAAC,sBAAQ;AAAT,W;;;;;;;;;;;;;;;;;;;;AEtBvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,QAAM0C,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE,gFAAvB;AAA0CC,aAAO,EAAE;AAAEtC,sBAAc,EAAE;AAAlB;AAAnD,KADqB,EAErB;AAAEoC,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE,gFAA/B;AAAkDE,iBAAW,EAAE,CAAC,0DAAD,CAA/D;AAA4ED,aAAO,EAAE;AAACxD,YAAI,EAAE;AAAP;AAArF,KAFqB,EAGrB;AAAEsD,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE,sFAA7B;AAAkDE,iBAAW,EAAE,CAAC,0DAAD;AAA/D,KAHqB,CAAvB;;QAUaC,2B;;;;;YAAAA;;;;yBAAAA,2B;AAA2B,O;AAAA,gBAH7B,CAAC,6DAAaC,QAAb,CAAsBN,MAAtB,CAAD,CAG6B,EAF5B,4DAE4B;;;;0HAA3BK,2B,EAA2B;AAAA;AAAA,kBAF5B,4DAE4B;AAAA,O;AAFhB,K;;;;;sEAEXA,2B,EAA2B;cAJvC,sDAIuC;eAJ9B;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBN,MAAtB,CAAD,CADD;AAERQ,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAI8B,Q;;;;;;;;;;;;;;;;;;ACpBxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmBaC,oB;;;;;YAAAA;;;;yBAAAA,oB;AAAoB,O;AAAA,gBARtB,CACP,4DADO,EAEP,2FAFO,EAGP,0DAHO,EAIP,kEAJO,CAQsB;;;;0HAApBA,oB,EAAoB;AAAA,uBAFhB,sFAEgB,EAFK,gFAEL,EAFwB,gFAExB;AAFyC,kBALtE,4DAKsE,EAJtE,2FAIsE,EAHtE,0DAGsE,EAFtE,kEAEsE;AAEzC,O;AAJjB,K;;;;;sEAIHA,oB,EAAoB;cAThC,sDASgC;eATvB;AACRF,iBAAO,EAAE,CACP,4DADO,EAEP,2FAFO,EAGP,0DAHO,EAIP,kEAJO,CADD;AAORG,sBAAY,EAAE,CAAC,sFAAD,EAAsB,gFAAtB,EAAyC,gFAAzC;AAPN,S;AASuB,Q;;;;;;;;;;;;;;;;;;ACnBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,4B;AAEX,4CAAoBnE,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA6B;;;;gCAEzCoE,K,EAA6B;AACnC,iBAAO,KAAKpE,WAAL,CAAiBoD,QAAjB,EAAP;AACD;;;;;;;uBANUe,4B,EAA4B,iH;AAAA,K;;;aAA5BA,4B;AAA4B,eAA5BA,4BAA4B,K;AAAA,kBAF3B;;;;;sEAEDA,4B,EAA4B;cAHxC,wDAGwC;eAH7B;AACVE,oBAAU,EAAE;AADF,S;AAG6B,Q","file":"default~page-management-page-management-module~snippet-management-snippet-management-module-es5.js","sourcesContent":["export class Page {\n    id: number;\n\tname: string;\n\tslug: string;\n\torder: number;\n\tcontent: string;\n\thtmlContent: string;\n\tauthorId: string;\n\tpublished: boolean;\n\tcreated: Date;\n}\n\nexport class PageCollection {\n\tpages: Array<Page>;\n}","import { Component, OnInit } from '@angular/core';\nimport { Page } from './../../api/page';\nimport { MenuService } from './../../services/page/menu.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-page-create',\n  templateUrl: './page-create.component.html',\n  styleUrls: ['./page-create.component.css']\n})\nexport class PageCreateComponent implements OnInit {\n\n  page: Page = new Page();\n\n  error: string = null;\n  constructor(private menuService: MenuService, \n    private router: Router, \n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n\n  }\n\n  savePage() {\n    this.menuService.createPage(this.page).subscribe(page => {\n      this.router.navigate(['./..'], {relativeTo: this.activatedRoute});\n    }, error => {\n      console.log('Something went wrong when creating page');\n      this.error = error;\n    });\n  }\n}\n","<div class=\"uk-section uk-section-default\">\n  <div class=\"uk-container\">\n    <form class=\"uk-form-horizontal uk-margin-large\" #pageForm=\"ngForm\">\n      <div class=\"uk-margin\" *ngIf=\"page.id\">\n        <label class=\"uk-form-label\" for=\"form-horizontal-id\">Id</label>\n        <div class=\"uk-form-controls\">\n          <input class=\"uk-input\" id=\"form-horizontal-id\" name=\"id\" type=\"text\" [(ngModel)]=\"page.id\" disabled>\n        </div>\n      </div>\n\n      <div class=\"uk-margin\" *ngIf=\"page.order\">\n          <label class=\"uk-form-label\" for=\"form-horizontal-order\">Order</label>\n          <div class=\"uk-form-controls\">\n            <input class=\"uk-input\" id=\"form-horizontal-order\" name=\"order\" type=\"text\" [(ngModel)]=\"page.order\" disabled>\n          </div>\n      </div>\n\n      <div class=\"uk-margin\">\n        <label class=\"uk-form-label\" for=\"form-horizontal-name\">Name</label>\n        <div class=\"uk-form-controls\">\n          <input class=\"uk-input\" required #name=\"ngModel\" [ngClass]=\"{'uk-form-danger': name.invalid }\" id=\"form-horizontal-name\"\n            name=\"title\" type=\"text\" [(ngModel)]=\"page.name\" placeholder=\"Page name...\">\n        </div>\n      </div>\n\n      <div class=\"uk-margin\">\n        <label class=\"uk-form-label\" for=\"form-horizontal-slug\">Slug</label>\n        <div class=\"uk-form-controls\">\n          <input class=\"uk-input\" required #slug=\"ngModel\" [ngClass]=\"{'uk-form-danger': slug.invalid }\" id=\"form-horizontal-slug\"\n            name=\"slug\" type=\"text\" [(ngModel)]=\"page.slug\" placeholder=\"URL name to access the page here\">\n        </div>\n      </div>\n\n      <div class=\"uk-margin\">\n        <label class=\"uk-form-label\" for=\"form-horizontal-content\">Content</label>\n        <div class=\"uk-form-controls\">\n          <app-html-editor name=\"content\" [(ngModel)]=\"page.content\" required></app-html-editor>\n          <!--\n            <app-markdown-editor name=\"Content\" [(ngModel)]=\"page.content\" required></app-markdown-editor>\n          -->\n        </div>\n      </div>\n\n      <div class=\"uk-margin\">\n        <div class=\"uk-form-controls\" uk-margin>\n          <button class=\"uk-button uk-button-default\" routerLink=\"./../..\">Cancel</button>\n          <button [disabled]=\"!pageForm.valid\" class=\"uk-button uk-button-primary\" (click)=\"savePage()\">Save</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MenuService } from './../../services/page/menu.service';\nimport { Page } from './../../api/page';\n\n@Component({\n  selector: 'app-page-edit',\n  templateUrl: './../page-create/page-create.component.html',\n  styleUrls: ['./page-edit.component.css']\n})\nexport class PageEditComponent implements OnInit {\n\n  page: Page = new Page();\n\n  constructor(private activatedRoute: ActivatedRoute, private menuService: MenuService, private router: Router) { }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(data => {\n      console.log('PAGE LOADED: ', data.page);\n      this.page = data.page;\n    });\n  }\n\n  savePage() {\n    console.log('EDIT PAGE: ', this.page);\n    this.menuService.editPage(this.page).subscribe(page => {\n      this.router.navigate(['../../'], { relativeTo: this.activatedRoute});\n    });\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Page, PageCollection } from './../../api/page';\nimport { MenuService } from './../../services/page/menu.service';\nimport { CompileShallowModuleMetadata } from '@angular/compiler';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { BlockingProxy } from 'blocking-proxy';\n\ndeclare var UIkit: any;\n\n@Component({\n  selector: 'app-page-list',\n  templateUrl: './page-list.component.html',\n  styleUrls: ['./page-list.component.css']\n})\nexport class PageListComponent implements OnInit, AfterViewInit {\n\n  pages: Array<Page>;\n  markedForDeletion: Page;\n  idToDelete: number = null;\n  timer: number = null;\n\n  @ViewChild('sortablePagesContainer', {static: false}) sortablePagesContainer: ElementRef;\n\n  constructor(private activatedRoute: ActivatedRoute, private menuService: MenuService) {\n\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(data => {\n      if (data.pageCollection) {\n        this.pages = data.pageCollection.pages;\n      } else {\n        this.pages = [];\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.sortablePagesContainer.nativeElement.addEventListener('stop', (event) => {\n      this.reorderPages();\n    });\n\n    UIkit.sortable(this.sortablePagesContainer.nativeElement, {\n      'handle'    : '.uk-sortable-handle',\n      'cls-drag'  : '.uk-sortable-handle'\n    });\n  }\n\n  pagePublishedChanged(page: Page, event: any) {\n    const pageToBeSaved = page;\n    pageToBeSaved.published = event.target.checked;\n\n    this.menuService.editPage(pageToBeSaved).subscribe(page => {\n      console.log(`Page ${page.name} published: ${page.published}`);\n    });\n  }\n\n\n  private reorderPages() {\n    const pageCollection = new PageCollection();\n    const newOrderedPages = [];\n    const pageDivs = this.sortablePagesContainer.nativeElement.children;\n    for (let i = 0; i < pageDivs.length; i++) {\n      const pageEl = pageDivs[i];\n      const id = parseInt(pageEl.children[1].innerText, 10);\n      console.log(`ID is: ${id}`);\n      const pageWithNewOrder = this.getPageById(id);\n      pageWithNewOrder.order = i + 1;\n      newOrderedPages.push(pageWithNewOrder);\n    }\n\n    this.pages = newOrderedPages;\n    pageCollection.pages = newOrderedPages;\n    this.menuService.reorderPages(pageCollection).subscribe(collection => {\n      this.pages = collection.pages;\n    });\n  }\n\n  private getPageById(id: number) {\n    return this.pages.find(page => {\n      return page.id === id;\n    });\n  }\n\n  deletePage(page: Page) {\n    this.menuService.deletePage(page).subscribe(() => {\n      if (this.timer) {\n        this.disableTimer();\n      }\n\n      this.menuService.getPages().subscribe(pageCollection => {\n        this.pages = pageCollection.pages;\n      });\n    });\n  }\n\n  markForDeletion(page: Page) {\n    this.idToDelete = page.id;\n    this.timer = window.setTimeout(() => {\n      this.disableTimer();\n    }, 2000);\n  }\n\n  private disableTimer() {\n    this.idToDelete = null;\n    window.clearTimeout(this.timer);\n    this.timer = null;\n  }\n}\n","<p *ngIf=\"pages.length === 0\" class=\"uk-text-warning\">No pages available</p>\n\n\n<div class=\"uk-child-width-expand uk-grid-small nb-table-header uk-sortable-nodrag\" uk-grid>\n    <div>Order</div>\n    <div>ID</div>\n    <div>Name</div>\n    <div>Slug</div>\n    <div>Published</div>\n    <div class=\"uk-width-1-4\">Options</div>\n</div>\n\n<div *ngIf=\"pages.length > 0\" #sortablePagesContainer>\n    <div class=\"uk-child-width-expand uk-grid-small\" *ngFor=\"let page of pages\" uk-grid>\n        <div class=\"uk-sortable-handle\"><span uk-icon=\"menu\"></span> {{page.order}}</div>\n        <div>{{page.id}}</div>\n        <div>{{page.name}}</div>\n        <div>{{page.slug}}</div>\n        <div><input class=\"uk-checkbox\" type=\"checkbox\" (change)=\"pagePublishedChanged(page, $event)\" [checked]=\"page.published\"/></div>\n        <div class=\"uk-width-1-4\">\n            <div *ngIf=\"idToDelete !== page.id\">\n                <button class=\"uk-button uk-button-small uk-button-default\" routerLink=\"./edit/{{page.id}}\">edit</button>\n                <button class=\"uk-button uk-button-small uk-button-danger uk-margin-left\"  [disabled]=\"idToDelete !== null && idToDelete !== page.id\" (click)=\"markForDeletion(page)\">delete</button>\n            </div>\n            \n            <div *ngIf=\"idToDelete === page.id\" class=\"uk-margin-left\">\n                <label>Sure?</label>\n                <button  class=\"uk-button uk-button-small uk-button-primary uk-margin-left\" (click)=\"deletePage(page)\">yes</button>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageListComponent } from './page-list/page-list.component';\nimport { PageEditComponent } from './page-edit/page-edit.component';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { PageCreateComponent } from './page-create/page-create.component';\nimport { PageResolveService } from '../services/page/page-resolve.service';\nimport { PageCollectionResolveService } from '../services/page/page-collection-resolve.service';\nimport { FormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n  { path: '', component: PageListComponent, resolve: { pageCollection: PageCollectionResolveService }},\n  { path: 'edit/:id', component: PageEditComponent, canActivate: [AuthGuard], resolve: {page: PageResolveService}},\n  { path: 'create', component: PageCreateComponent, canActivate: [AuthGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PageManagementRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PageManagementRoutingModule } from './page-management-routing.module';\nimport { PageCreateComponent } from './page-create/page-create.component';\nimport { PageEditComponent } from './page-edit/page-edit.component';\nimport { PageListComponent } from './page-list/page-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    PageManagementRoutingModule,\n    FormsModule,\n    SharedModule\n  ],\n  declarations: [PageCreateComponent, PageEditComponent, PageListComponent],\n})\nexport class PageManagementModule { }\n","import { Injectable } from '@angular/core';\nimport { PageCollection } from './../../api/page';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { MenuService } from './menu.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageCollectionResolveService implements Resolve<PageCollection>  {\n\n  constructor(private menuService: MenuService) { }\n\n  resolve(route: ActivatedRouteSnapshot): Observable<PageCollection> {\n    return this.menuService.getPages();\n  }\n}\n\n\n"]}