{"version":3,"sources":["webpack:///src/app/api/snippet.ts","webpack:///src/app/snippet-management/snippet-create/snippet-create.component.ts","webpack:///src/app/snippet-management/snippet-create/snippet-create.component.html","webpack:///src/app/snippet-management/snippet-edit/snippet-edit.component.ts","webpack:///src/app/snippet-management/snippet-list/snippet-list.component.ts","webpack:///src/app/snippet-management/snippet-list/snippet-list.component.html","webpack:///src/app/snippet-management/snippet-management-routing.module.ts","webpack:///src/app/snippet-management/snippet-management.module.ts"],"names":["Snippet","SnippetCollection","SnippetCreateComponent","snippetService","router","activatedRoute","snippet","saveSnippet","subscribe","id","navigate","relativeTo","selector","templateUrl","styleUrls","SnippetEditComponent","data","SnippetListComponent","snippetCollection","routes","path","component","resolve","SnippetManagementRoutingModule","forChild","imports","exports","SnippetManagementModule","declarations"],"mappings":"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","file":"snippet-management-snippet-management-module-es5.js","sourcesContent":["export class Snippet {\n    id: number;\n    name: string;\n    content: string;\n}\n\nexport class SnippetCollection {\n    htmlSnippets: Array<Snippet>;\n}","import { Component, OnInit } from '@angular/core';\nimport { Snippet } from './../../api/snippet';\nimport { SnippetService } from '../../shared/snippet/snippet.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-snippet-create',\n  templateUrl: './snippet-create.component.html',\n  styleUrls: ['./snippet-create.component.css']\n})\nexport class SnippetCreateComponent implements OnInit {\n\n  snippet: Snippet = new Snippet();\n\n  constructor(private snippetService: SnippetService, private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n\n  saveSnippet() {\n    this.snippetService.saveSnippet(this.snippet).subscribe(snippet => {\n      if (snippet.id) {\n        this.router.navigate(['./..'], {relativeTo: this.activatedRoute});\n      }\n    }) \n  }\n\n}\n","<div class=\"uk-section uk-section-default\">\n  <div class=\"uk-container\">\n    <form class=\"uk-form-horizontal uk-margin-large\" #snippetForm=\"ngForm\">\n      <div class=\"uk-margin\" *ngIf=\"snippet.id\">\n        <label class=\"uk-form-label\" for=\"form-horizontal-id\">Id</label>\n        <div class=\"uk-form-controls\">\n          <input class=\"uk-input\" id=\"form-horizontal-id\" name=\"id\" type=\"text\" [(ngModel)]=\"snippet.id\" disabled>\n        </div>\n      </div>\n\n      <div class=\"uk-margin\">\n        <label class=\"uk-form-label\" for=\"form-horizontal-name\">Name</label>\n        <div class=\"uk-form-controls\">\n          <input class=\"uk-input\" required #name=\"ngModel\" [ngClass]=\"{'uk-form-danger': name.invalid }\" id=\"form-horizontal-name\"\n            name=\"title\" type=\"text\" [(ngModel)]=\"snippet.name\" placeholder=\"Snippet name...\">\n        </div>\n      </div>\n\n      <div class=\"uk-margin\">\n        <label class=\"uk-form-label\" for=\"form-horizontal-content\">Content</label>\n        <div class=\"uk-form-controls\">\n          <app-html-editor name=\"content\" [(ngModel)]=\"snippet.content\" required></app-html-editor>\n          <!--\n          <app-markdown-editor name=\"Content\" [(ngModel)]=\"page.content\" required></app-markdown-editor>\n          -->\n        </div>\n      </div>\n\n      <div class=\"uk-margin\">\n        <div class=\"uk-form-controls\" uk-margin>\n          <button class=\"uk-button uk-button-default\" routerLink=\"./../..\">Cancel</button>\n          <button [disabled]=\"!snippetForm.valid\" class=\"uk-button uk-button-primary\" (click)=\"saveSnippet()\">Save</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SnippetService } from '../../shared/snippet/snippet.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Snippet } from './../../api/snippet';\n\n@Component({\n  selector: 'app-snippet-edit',\n  templateUrl: './../snippet-create/snippet-create.component.html',\n  styleUrls: ['./snippet-edit.component.css']\n})\nexport class SnippetEditComponent implements OnInit {\n\n  snippet: Snippet;\n\n  constructor(private snippetService: SnippetService, private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(data => {\n      this.snippet = data.snippet;\n    });\n  }\n\n  saveSnippet() {\n    this.snippetService.saveSnippet(this.snippet).subscribe(snippet => {\n      if (snippet.id) {\n        this.router.navigate(['./../..'], {relativeTo: this.activatedRoute});\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SnippetCollection, Snippet } from './../../api/snippet';\n\n@Component({\n  selector: 'app-snippet-list',\n  templateUrl: './snippet-list.component.html',\n  styleUrls: ['./snippet-list.component.css']\n})\nexport class SnippetListComponent implements OnInit {\n\n  idToDelete: number;\n\n  snippetCollection: SnippetCollection;\n\n  constructor(private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(data => {\n      this.snippetCollection = data.snippetCollection;\n    });\n  }\n\n  deleteSnippet(snippet: Snippet) {\n    // TODO\n  }\n\n  markForDeletion(snippet: Snippet) {\n    \n  }\n\n}\n","<p *ngIf=\"snippetCollection?.htmlSnippets.length === 0\" class=\"uk-text-warning\">No snippets available</p>\n\n\n<table class=\"uk-table uk-table-divider\" *ngIf=\"snippetCollection.htmlSnippets.length > 0\">\n    <thead>\n        <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Options</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let snippet of snippetCollection.htmlSnippets\">\n            <td>{{ snippet.id }}</td>\n            <td>{{ snippet.name }}</td>\n            <td>\n                <div *ngIf=\"idToDelete !== snippet.id\">\n                    <button class=\"uk-button uk-button-small uk-button-default\" routerLink=\"./edit/{{snippet.name}}\">edit</button>\n                    <button class=\"uk-button uk-button-small uk-button-danger uk-margin-left\"  [disabled]=\"idToDelete !== null && idToDelete !== snippet.id\" (click)=\"markForDeletion(snippet)\">delete</button>\n                </div>\n                \n                <div *ngIf=\"idToDelete === snippet.id\" class=\"uk-margin-left\">\n                    <label>Sure?</label>\n                    <button  class=\"uk-button uk-button-small uk-button-primary uk-margin-left\" (click)=\"deleteSnippet(snippet)\">yes</button>\n                </div>\n            </td>\n        </tr>\n    </tbody>\n</table>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SnippetListComponent } from './snippet-list/snippet-list.component';\nimport { SnippetCreateComponent } from './snippet-create/snippet-create.component';\nimport { SnippetCollectionResolveService } from '../shared/snippet/snippet-collection-resolve.service';\nimport { SnippetEditComponent } from './snippet-edit/snippet-edit.component';\nimport { SnippetResolveService } from '../shared/snippet/snippet-resolve.service';\n\nconst routes: Routes = [\n  { path: '', component: SnippetListComponent, resolve: { snippetCollection: SnippetCollectionResolveService }},\n  { path: 'edit/:name', component: SnippetEditComponent, resolve: {snippet: SnippetResolveService}},\n  { path: 'create', component: SnippetCreateComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SnippetManagementRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SnippetManagementRoutingModule } from './snippet-management-routing.module';\nimport { SnippetCreateComponent } from './snippet-create/snippet-create.component';\nimport { SnippetEditComponent } from './snippet-edit/snippet-edit.component';\nimport { SnippetListComponent } from './snippet-list/snippet-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { PageManagementModule } from '../page-management/page-management.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    SnippetCreateComponent,\n    SnippetEditComponent,\n    SnippetListComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    SnippetManagementRoutingModule,\n    PageManagementModule,\n  ]\n})\nexport class SnippetManagementModule { }\n"]}